name: Rust CI/CD

on:
  push:
    branches: [ "master" ]
    tags:
      - 'v*'
  pull_request:
    branches: [ "master" ]

env:
  CARGO_TERM_COLOR: always
  BINARY_NAME: cld-upload-helper

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    
    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
      
    - name: Rust Cache
      uses: Swatinem/rust-cache@v2.7.8
      with:
        cache-on-failure: true
    
    - name: Build
      run: cargo build --release
    
    - name: Run tests
      run: cargo test --verbose
      
    - name: Upload a Build Artifact
      uses: actions/upload-artifact@v4.6.1
      with:
        name: ${{ env.BINARY_NAME }}-linux
        path: target/release/${{ env.BINARY_NAME }}
        
  release:
    needs: build
    if: startsWith(github.ref, 'refs/tags/') || github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
        
    - name: Download a Build Artifact
      uses: actions/download-artifact@v4.2.0
      with:
        name: ${{ env.BINARY_NAME }}-linux
        path: ./artifacts
        
    - name: Make binary executable
      run: chmod +x ./artifacts/${{ env.BINARY_NAME }}
        
    - name: Generate release notes
      id: release_notes
      run: |
        # Get latest tag or use commit hash if no tags
        if [[ "${{ github.ref }}" == "refs/heads/master" ]]; then
          LATEST_TAG=$(git describe --tags --abbrev=0 2>/dev/null || echo "initial-release")
          CURRENT_COMMIT=$(git rev-parse --short HEAD)
          VERSION="dev-${CURRENT_COMMIT}"
          
          # Generate changelog since last tag or all commits if no tags
          if [[ "$LATEST_TAG" == "initial-release" ]]; then
            CHANGES=$(git log --pretty=format:"- %s" | head -10)
          else
            CHANGES=$(git log ${LATEST_TAG}..HEAD --pretty=format:"- %s" | head -10)
          fi
        else
          VERSION=${GITHUB_REF#refs/tags/}
          PREVIOUS_TAG=$(git describe --tags --abbrev=0 ${VERSION}^ 2>/dev/null || echo "")
          
          if [[ -z "$PREVIOUS_TAG" ]]; then
            CHANGES=$(git log --pretty=format:"- %s" | head -10)
          else
            CHANGES=$(git log ${PREVIOUS_TAG}..${VERSION} --pretty=format:"- %s")
          fi
        fi
        
        echo "version=${VERSION}" >> $GITHUB_OUTPUT
        echo "RELEASE_NOTES<<EOF" >> $GITHUB_ENV
        echo "# Cloudinary Uploader CLI ${VERSION}" >> $GITHUB_ENV
        echo "" >> $GITHUB_ENV
        echo "## Changes" >> $GITHUB_ENV
        echo "${CHANGES}" >> $GITHUB_ENV
        echo "" >> $GITHUB_ENV
        echo "## Features" >> $GITHUB_ENV
        echo "- Interactive file selection using fzf" >> $GITHUB_ENV
        echo "- Concurrent uploads with progress tracking" >> $GITHUB_ENV
        echo "- Basic transformations (WebP, AVIF)" >> $GITHUB_ENV
        echo "- Configuration management with TOML" >> $GITHUB_ENV
        echo "EOF" >> $GITHUB_ENV
        
    - name: GH Release
      uses: softprops/action-gh-release@v2.2.1
      with:
        name: Release ${{ steps.release_notes.outputs.version }}
        tag_name: ${{ startsWith(github.ref, 'refs/tags/') && github.ref_name || format('dev-{0}', github.sha) }}
        body: ${{ env.RELEASE_NOTES }}
        draft: false
        prerelease: ${{ github.ref == 'refs/heads/master' }}
        files: ./artifacts/${{ env.BINARY_NAME }}
        generate_release_notes: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
